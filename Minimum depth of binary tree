/*Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.*/
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int minDepth(TreeNode root) {
        if(root==null)
           return 0;
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        TreeNode divider=new TreeNode(0);
        int depth=1;
        q.add(root);
        q.add(divider);
        while(!q.isEmpty())
        {
            TreeNode cur=q.poll();
            if(cur.equals(divider))
            {
                if(q.isEmpty())
                   return depth;
                else
                {
                   q.add(divider);
                   depth++;
                   continue;
                }   
            }
            if(cur.left==null && cur.right==null)
               return depth;
            if(cur.left!=null)
               q.add(cur.left);
            if(cur.right!=null)
               q.add(cur.right);
            
        }
        return depth;
        
        
    }
}
